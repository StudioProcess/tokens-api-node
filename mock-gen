#!/usr/bin/env bash

# systemd Service Installer Script

# Directory of this script (absolute path)
DIR=$(dirname $(realpath $0))

service="mock-gen"

user=$USER
if [ "$1" == "install" ]; then
  [ -n "$2" ] && user=$2 # take user from argument if supplied
fi

service_file="[Unit]
Description=Mock Generator â€“ Tokens for Climate Care
Documentation=https://github.com/studioprocess/tokens-api-node
After=network.target tokens-api.service
Requires=tokens-api.service
Conflicts=

[Service]
Environment=
Type=simple
User=$user
ExecStart=$DIR/mock-generator.mjs
WorkingDirectory=$DIR
Restart=always

[Install]
WantedBy=multi-user.target
"

usage() {
  echo "Usage:"
  echo "  Install/Uninstall:  $0 install [user]|remove|uninstall"
  echo "  Enable/Disable:     $0 enable|disable"
  echo "  Start/Stop/Restart: $0 start|stop|restart"
  echo "  Status:             $0 status"
  echo "  Logs:               $0 logs"
  exit
}

if [ $# -eq 0 ]; then
  usage
fi

if [ $1 == "install" ] ; then
  echo "[ Installing Script to /usr/local/bin ]"
  ln -sf $(realpath $0) /usr/local/bin/$(basename $0)
  echo "[ Installing Service File ]"
  sudo echo "$service_file" > /etc/systemd/system/${service}.service
  echo "[ Enabling Service ]"
  sudo systemctl enable $service
  echo "Important: Service will be run as user: $user"
elif [ $1 == "remove" ] || [ $1 == "uninstall" ]; then
  echo "[ Disabling Service ]"
  sudo systemctl disable $service
  echo "[ Removing Service File ]"
  sudo rm -f /etc/systemd/system/${service}.service
  echo "[ Removing Script from /usr/local/bin ]"
  sudo rm /usr/local/bin/$(basename $0)
elif [ $1 == "enable" ] ; then
  echo "[ Enabling Service ]"
  sudo systemctl enable $service
elif [ $1 == "disable" ] ; then
  echo "[ Disabling Service ]"
  sudo systemctl disable $service
elif [ $1 == "start" ] ; then
  echo "[ Starting Service ]"
  sudo systemctl start $service
elif [ $1 == "stop" ] ; then
  echo "[ Stopping Service ]"
  sudo systemctl stop $service
elif [ $1 == "restart" ] ; then
  echo "[ Restarting Service ]"
  sudo systemctl restart $service
elif [ $1 == "status" ] ; then
  echo "[ Service Service ]"
  sudo systemctl status $service
elif [ $1 == "logs" ] ; then
  echo "[ Service Logs ]"
  sudo journalctl -u ${service}.service -e
else
  usage
fi
